/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { base as i, animationStyles as e, containers as s, states as a, popup as x, directionMap as t } from "./json-classes.mjs";
const p = {
  animationContainer: `${i.prefix}-${e.prefix}-${s.container}`,
  animationContainerShown: `${i.prefix}-${e.prefix}-${s.container}-${a.shown}`,
  animationChild: `${i.prefix}-${e.child}-${e.prefix}-${s.container}`,
  popup: `${i.prefix}-${x.prefix}`,
  slide: {
    up: {
      enter: `${i.prefix}-${e.slide}-${t.up}-${e.enter}`,
      exit: `${i.prefix}-${e.slide}-${t.up}-${e.exit}`
    },
    down: {
      enter: `${i.prefix}-${e.slide}-${t.down}-${e.enter}`,
      exit: `${i.prefix}-${e.slide}-${t.down}-${e.exit}`
    },
    left: {
      enter: `${i.prefix}-${e.slide}-${t.left}-${e.enter}`,
      exit: `${i.prefix}-${e.slide}-${t.left}-${e.exit}`
    },
    right: {
      enter: `${i.prefix}-${e.slide}-${t.right}-${e.enter}`,
      exit: `${i.prefix}-${e.slide}-${t.right}-${e.exit}`
    }
  },
  slideActive: {
    up: {
      enter: `${i.prefix}-${e.slide}-${t.up}-${e.enter}-${e.active}`,
      exit: `${i.prefix}-${e.slide}-${t.up}-${e.exit}-${e.active}`
    },
    down: {
      enter: `${i.prefix}-${e.slide}-${t.down}-${e.enter}-${e.active}`,
      exit: `${i.prefix}-${e.slide}-${t.down}-${e.exit}-${e.active}`
    },
    left: {
      enter: `${i.prefix}-${e.slide}-${t.left}-${e.enter}-${e.active}`,
      exit: `${i.prefix}-${e.slide}-${t.left}-${e.exit}-${e.active}`
    },
    right: {
      enter: `${i.prefix}-${e.slide}-${t.right}-${e.enter}-${e.active}`,
      exit: `${i.prefix}-${e.slide}-${t.right}-${e.exit}-${e.active}`
    }
  }
}, l = {
  animationContainer: (n) => {
    const { c: $ = p } = n;
    return {
      [$.animationContainer]: !0
    };
  },
  animationContainerShown: (n) => {
    const { c: $ = p } = n;
    return {
      [$.animationContainerShown]: !0
    };
  },
  animationChild: (n) => {
    const { c: $ = p } = n;
    return {
      [$.animationChild]: !0
    };
  },
  popup: (n) => {
    const { c: $ = p } = n;
    return {
      [$.popup]: !0
    };
  },
  slide: (n) => {
    const { direction: $, type: o, c: r = p } = n;
    return {
      [r.slide[$][o]]: r.slide[$] && r.slide[$][o]
    };
  },
  slideActive: (n) => {
    const { direction: $, type: o, c: r = p } = n;
    return {
      [r.slideActive[$][o]]: r.slideActive[$] && r.slideActive[$][o]
    };
  }
};
export {
  l as uPopup
};
