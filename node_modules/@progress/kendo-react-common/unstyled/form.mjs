/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { base as s, forms as a, sizeMap as l, orientationMap as f } from "./json-classes.mjs";
const e = `${s.prefix}-${a.form}`, c = `${s.prefix}-${a.form}-${a.field}`, $ = {
  form: {
    main: e,
    size: {
      prefix: `${e}-`,
      small: `${e}-${l.small}`,
      medium: `${e}-${l.medium}`,
      large: `${e}-${l.large}`
    },
    orientation: {
      horizontal: `${e}-${f.horizontal}`,
      vertical: `${e}-${f.vertical}`
    }
  },
  field: {
    main: c,
    isRtl: `${s.prefix}-${s.rtl}`
  }
}, z = {
  form: (n) => {
    var m;
    const { size: r, orientation: o, c: t = $ } = n, i = t.form;
    return {
      [i.main]: !0,
      [i.size[r]]: i.size[r],
      [((m = i.size) == null ? void 0 : m.prefix) || ""]: r && !i.size[r],
      [i.orientation[o]]: i.orientation[o]
    };
  },
  field: (n) => {
    const { isRtl: r, c: o = $ } = n, t = o.field;
    return {
      [t.main]: !0,
      [t.isRtl]: r
    };
  }
};
export {
  z as uForm
};
