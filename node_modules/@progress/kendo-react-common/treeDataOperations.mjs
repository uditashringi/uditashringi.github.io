/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
function f(t, n, r) {
  return r ? { ...t, [n]: r.length ? [...r] : void 0 } : t && t[n] ? [...t[n]] : [];
}
function s(t, n, r) {
  if (t[n]) {
    const e = f(t, n).map(
      (o) => s(o, n, r)
    );
    return r(f(t, n, e));
  }
  return r(t);
}
const i = (t, n, r) => [...t.map((e) => s(e, n, r))], u = (t, n, r, e) => {
  let o = t;
  const c = [];
  for (let h = 0; h < n.length; h++)
    o = o[n[h]], o = Array.isArray(o) ? o : o[r], c.push(o);
  const p = c.length > 1 ? c[c.length - 2] : t, g = n[n.length - 1], a = e(p[g]);
  p.splice(g, 1, a);
}, w = (t, n, r) => Object.assign(
  {},
  t,
  t[n] ? { [n]: t[n].slice() } : {},
  r || {}
), x = (t, n, r) => {
  const e = [], o = [...n];
  if (o.length) {
    let c = t[o.shift() || 0];
    for (e.push(c); o.length && r; )
      c = c[r][o.shift() || 0], e.push(c);
  }
  return e;
};
export {
  w as extendDataItem,
  x as getItemPath,
  i as mapTree,
  u as mapTreeItem
};
