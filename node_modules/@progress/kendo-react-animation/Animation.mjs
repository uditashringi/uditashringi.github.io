/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as n from "react";
import e from "prop-types";
import { validatePackage as R, useUnstyled as g, classNames as q, uAnimation as C } from "@progress/kendo-react-common";
import { AnimationChild as b } from "./AnimationChild.mjs";
import { TransitionGroup as A } from "react-transition-group";
import { packageMetadata as x } from "./package-metadata.mjs";
const E = (i) => {
  R(x);
  const {
    id: o,
    style: r,
    children: s,
    component: a = "div",
    className: c,
    childFactory: l,
    stackChildren: T,
    componentChildStyle: m,
    componentChildClassName: d,
    ...p
  } = i, u = g(), t = i.unstyled || u, y = t && t.uAnimation, h = {
    id: o,
    style: r,
    component: a,
    childFactory: l,
    className: q(C.child({ c: y }), c)
  }, f = n.Children.map(s || null, (N) => /* @__PURE__ */ n.createElement(b, { ...p, unstyled: t, style: m, className: d }, N));
  return /* @__PURE__ */ n.createElement(A, { ...h }, f);
};
E.propTypes = {
  children: e.oneOfType([e.arrayOf(e.node), e.node]),
  childFactory: e.any,
  className: e.string,
  component: e.string,
  id: e.string,
  style: e.any,
  transitionName: e.string.isRequired,
  appear: e.bool.isRequired,
  enter: e.bool.isRequired,
  exit: e.bool.isRequired,
  transitionEnterDuration: e.number.isRequired,
  transitionExitDuration: e.number.isRequired
};
export {
  E as Animation
};
