/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import e from "prop-types";
import { RadioButton as A } from "./RadioButton.mjs";
import { createPropsContext as J, validatePackage as Q, usePropsContext as W, useUnstyled as X, focusFirstFocusableChild as Y, dispatchEvent as P, useId as Z, classNames as R, uRadioGroup as E, useRtl as _ } from "@progress/kendo-react-common";
import { packageMetadata as $ } from "../package-metadata.mjs";
const ee = J(), G = t.forwardRef((r, I) => {
  Q($);
  const m = W(ee, r), {
    id: N,
    ariaLabelledBy: B,
    ariaDescribedBy: F,
    className: x,
    data: b,
    defaultValue: V,
    disabled: s,
    name: O,
    labelPlacement: j,
    layout: n,
    style: q,
    value: p,
    valid: z,
    item: D = ae.item,
    onChange: c,
    onFocus: d
  } = m, f = X(), y = f && f.uRadioGroup, o = t.useRef(null), C = t.useCallback(() => {
    o.current && Y(o.current);
  }, []), i = t.useCallback(
    () => ({
      element: o.current,
      focus: C
    }),
    [C]
  );
  t.useImperativeHandle(I, i);
  const [H, h] = t.useState(V), v = p !== void 0, u = v ? p : H, L = t.useCallback(
    (a) => {
      const l = a.value;
      !v && !s && h(l), c && !s && P(
        c,
        a.syntheticEvent,
        i(),
        { value: l }
      );
    },
    [h, c, s]
  ), S = t.useCallback(
    (a) => {
      d && !s && P(
        d,
        a.syntheticEvent,
        i(),
        void 0
      );
    },
    [d, s]
  ), T = Z(), w = R(
    E.ul({
      c: y,
      horizontal: n === "horizontal",
      vertical: n === "vertical" || n === void 0
    }),
    x
  ), K = _(o, m.dir), M = b && b.map((a, l) => {
    const g = u === a.value, U = u == null, k = {
      ...a,
      valid: z,
      checked: g,
      disabled: !!(a.disabled || s),
      labelPlacement: a.labelPlacement ? a.labelPlacement : j,
      tabIndex: a.tabIndex ? a.tabIndex : U && l === 0 || g ? 0 : -1,
      index: l,
      name: O || T,
      required: a.required,
      onChange: L,
      onFocus: S
    };
    return /* @__PURE__ */ t.createElement(
      D,
      {
        className: R(
          E.item({
            c: y,
            disabled: k.disabled || s
          })
        ),
        key: l,
        role: "none"
      },
      /* @__PURE__ */ t.createElement(A, { ...k })
    );
  });
  return /* @__PURE__ */ t.createElement(
    "ul",
    {
      id: N,
      role: "radiogroup",
      className: w,
      ref: o,
      dir: K,
      style: q,
      "aria-labelledby": B,
      "aria-describedby": F
    },
    M
  );
}), ae = {
  item: (r) => /* @__PURE__ */ t.createElement("li", { ...r })
};
G.propTypes = {
  ariaLabelledBy: e.string,
  ariaDescribedBy: e.string,
  className: e.string,
  data: e.arrayOf(e.object),
  defaultValue: e.any,
  dir: e.string,
  disabled: e.bool,
  labelPlacement: e.string,
  layout: e.string,
  name: e.string,
  style: e.object,
  value: e.any,
  onChange: e.func,
  onFocus: e.func
};
G.displayName = "KendoRadioGroup";
export {
  G as RadioGroup,
  ee as RadioGroupPropsContext
};
