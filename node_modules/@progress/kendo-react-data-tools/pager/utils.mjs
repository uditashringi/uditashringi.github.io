/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { caretAltToRightIcon as c, caretAltToLeftIcon as i, caretAltRightIcon as d, caretAltLeftIcon as g } from "@progress/kendo-svg-icons";
import { messages as u } from "../messages/index.mjs";
const f = (t, s) => s ? s(t) : { messageKey: t, defaultMessage: u[t] }, D = (t, s) => t.toLanguageString(s.messageKey, s.defaultMessage), m = (t, s, e) => {
  const a = t ? "caret-alt-to-right" : "caret-alt-to-left", o = t ? c : i, r = "k-pager-nav k-pager-first" + (s === 1 && !e ? " k-disabled" : "");
  return { rtlClass: a, rtlIcon: o, isDisabledClass: r, isDisabled: s === 1 ? !0 : void 0 };
}, v = (t, s, e) => {
  const a = t ? "caret-alt-right" : "caret-alt-left", o = t ? d : g, r = "k-pager-nav" + (s === 1 && !e ? " k-disabled" : "");
  return { rtlClass: a, rtlIcon: o, isDisabledClass: r, isDisabled: s === 1 ? !0 : void 0 };
}, k = (t, s, e, a) => {
  const o = t ? "caret-alt-left" : "caret-alt-right", r = t ? g : d, n = "k-pager-nav" + (s >= e && !a ? " k-disabled" : ""), l = s >= e ? !0 : void 0;
  return { rtlClass: o, rtlIcon: r, isDisabledClass: n, isDisabled: l };
}, C = (t, s, e, a) => {
  const o = t ? "caret-alt-to-left" : "caret-alt-to-right", r = t ? i : c, n = "k-pager-nav k-pager-last" + (s >= e && !a ? " k-disabled" : ""), l = s >= e ? !0 : void 0;
  return { rtlClass: o, rtlIcon: r, isDisabledClass: n, isDisabled: l };
};
export {
  m as getFirstButtonProps,
  f as getL10NMessage,
  C as getLastButtonProps,
  k as getNextButtonProps,
  v as getPrevButtonProps,
  D as translateMessage
};
