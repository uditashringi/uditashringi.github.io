/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { getActiveElement as h, classNames as u, uDropDownsBase as g } from "@progress/kendo-react-common";
import * as d from "react";
class v extends d.Component {
  constructor() {
    super(...arguments), this._input = null;
  }
  /**
   * @hidden
   */
  get input() {
    return this._input;
  }
  componentDidUpdate(a) {
    const i = a.value, o = a.suggestedText, { value: s, suggestedText: t, focused: p } = this.props, e = this.input, r = i !== s || t !== o, l = r && i.startsWith(s) && !(o && t && o.endsWith(t)), n = h(document);
    p && e && n !== e && e.focus(), t && r && !l && e && e.setSelectionRange(s.length - t.length, s.length);
  }
  render() {
    const { expanded: a = !1, disabled: i, role: o = "listbox", render: s, tabIndex: t, accessKey: p, unstyled: e } = this.props, r = e && e.uDropDownsBase, l = {
      tabIndex: t,
      accessKey: p
    }, n = /* @__PURE__ */ d.createElement(
      "input",
      {
        autoComplete: "off",
        id: this.props.id,
        type: "text",
        key: "searchbar",
        size: this.props.size,
        placeholder: this.props.placeholder,
        className: u(g.inputInner({ c: r })),
        role: o,
        name: this.props.name,
        value: this.props.value,
        onChange: this.props.onChange,
        ref: (c) => this._input = c,
        onKeyDown: this.props.onKeyDown,
        onFocus: this.props.onFocus,
        onBlur: this.props.onBlur,
        onClick: this.props.onClick,
        "aria-disabled": i || void 0,
        disabled: i || void 0,
        readOnly: this.props.readOnly || void 0,
        title: this.props.title,
        "aria-haspopup": "listbox",
        "aria-expanded": a,
        "aria-owns": this.props.owns,
        "aria-activedescendant": a ? this.props.activedescendant : void 0,
        "aria-describedby": this.props.ariaDescribedBy,
        "aria-labelledby": this.props.ariaLabelledBy,
        "aria-label": this.props.ariaLabel,
        "aria-required": this.props.ariaRequired,
        "aria-controls": this.props.ariaControls,
        ...l
      }
    );
    return s ? s.call(void 0, n) : n;
  }
}
export {
  v as default
};
