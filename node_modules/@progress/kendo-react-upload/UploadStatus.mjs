/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as i from "react";
import { classNames as d, IconWrap as u } from "@progress/kendo-react-common";
import { provideLocalizationService as g, registerForLocalization as f } from "@progress/kendo-react-intl";
import { headerStatusUploading as c, messages as n, headerStatusUploaded as r } from "./messages/index.mjs";
import { checkIcon as S, exclamationCircleIcon as h, uploadIcon as U } from "@progress/kendo-svg-icons";
class v extends i.Component {
  render() {
    const { isUploading: e, isUploaded: t, isUploadFailed: o } = this.props, l = d("k-upload-status"), m = !e && !o && t ? "check" : !e && o ? "exclamation-circle" : e ? "upload" : "", p = !e && !o && t ? { icon: S } : !e && o ? { icon: h } : e ? { icon: U } : {};
    let a = "";
    const s = g(this);
    return e ? a = s.toLanguageString(c, n[c]) : (t || o) && (a = s.toLanguageString(r, n[r])), /* @__PURE__ */ i.createElement("div", { className: l }, /* @__PURE__ */ i.createElement(u, { name: m, ...p }), a);
  }
}
f(v);
export {
  v as UploadStatus
};
