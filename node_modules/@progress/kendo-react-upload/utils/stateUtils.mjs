/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { UploadFileStatus as u } from "../interfaces/UploadFileStatus.mjs";
const d = (s) => (s || []).map((t) => ({
  ...t
})), c = (s, t) => {
  t.push(s);
}, p = (s, t) => {
  s.forEach((o) => c(o, t));
}, l = (s) => {
  const t = {};
  return s.forEach((o) => {
    t[o.uid] ? t[o.uid].push(o) : t[o.uid] = [o];
  }), t;
}, i = (s) => {
  const t = {};
  return r(s, (o, a) => {
    let e = !0;
    o.forEach((n) => {
      (n.status !== u.Selected || n.validationErrors && n.validationErrors.length > 0) && (e = !1);
    }), e && (t[a] = o);
  }), t;
}, h = (s, t) => {
  r(s, (o) => {
    o.forEach((a) => {
      a.status = t;
    });
  });
}, f = (s) => {
  const t = [];
  return r(s, (o) => {
    t.push.apply(t, o);
  }), t;
}, r = (s, t) => {
  Object.keys(s).forEach((o) => {
    t(s[o], o);
  });
}, F = {
  copyState: d,
  addMany: p,
  add: c,
  groupFilesByUid: l,
  filesForUpload: i,
  setFilesStatus: h,
  flatFileGroup: f,
  groupForEach: r
};
export {
  F as default
};
