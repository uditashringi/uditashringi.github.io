/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import { UploadFileStatus as a } from "../interfaces/UploadFileStatus.mjs";
import { guid as c } from "@progress/kendo-react-common";
const f = /&/g, m = /</g, E = /"/g, x = /'/g, h = />/g, d = (e) => ("" + e).replace(f, "&amp;").replace(m, "&lt;").replace(h, "&gt;").replace(E, "&quot;").replace(x, "&#39;"), p = (e) => {
  const t = /\.([^\.]+)$/, s = e.match(t);
  return s ? s[0] : "";
}, g = (e) => {
  const t = e.name, s = e.size;
  return {
    extension: p(t),
    name: d(t),
    getRawFile: () => e,
    size: s,
    status: a.Selected,
    progress: 0,
    uid: ""
  };
}, F = (e) => {
  const t = new Array();
  let s;
  for (s = 0; s < e.length; s++)
    t.push(g(e[s]));
  return t;
}, i = (e) => !!(e.validationErrors && e.validationErrors.length > 0), z = (e) => {
  for (const t of e)
    if (i(t))
      return !0;
  return !1;
}, U = (e) => {
  let t = 0, s;
  if (typeof e[0].size == "number")
    for (s = 0; s < e.length; s++)
      e[s].size && (t += e[s].size || 0);
  else
    return "";
  return t /= 1024, t < 1024 ? t.toFixed(2) + " KB" : (t / 1024).toFixed(2) + " MB";
}, S = (e, t) => {
  const s = c();
  return e.map((o) => (o.uid = t ? s : c(), o));
}, R = (e) => {
  let t = !1, s = !1, o = !1, l = !1;
  const u = (n) => {
    n.forEach((r) => {
      r.status === a.Uploading && (t = !0), r.status === a.Uploaded && (s = !0), r.status === a.UploadFailed && (o = !0), i(r) && (l = !0);
    });
  };
  return Array.isArray(e) ? u(e) : Object.keys(e).forEach((n) => {
    u(e[n]);
  }), [t, s, o, l];
}, v = {
  fileHasValidationErrors: i,
  filesHaveValidationErrors: z,
  getTotalFilesSizeMessage: U,
  getAllFileInfo: F,
  getFileInfo: g,
  getFileExtension: p,
  htmlEncode: d,
  assignGuidToFiles: S,
  getFileStatus: R
};
export {
  v as default
};
