/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import e from "prop-types";
import { DrawerContext as W } from "./context/DrawerContext.mjs";
import { DrawerNavigation as I } from "./DrawerNavigation.mjs";
import { validatePackage as O, useDir as T, classNames as j } from "@progress/kendo-react-common";
import { packageMetadata as H } from "../package-metadata.mjs";
const u = t.forwardRef((l, p) => {
  O(H);
  const {
    expanded: r = n.expanded,
    mode: o = n.mode,
    position: f = n.position,
    className: v,
    children: w,
    style: h,
    animation: y = n.animation,
    mini: m = n.mini,
    width: b = n.width,
    miniWidth: k = n.miniWidth,
    items: i,
    item: x,
    tabIndex: g,
    onOverlayClick: E,
    onSelect: s
  } = l, a = t.useRef(null), N = t.useCallback(() => {
    a.current && a.current.focus();
  }, []);
  t.useImperativeHandle(
    p,
    () => ({
      element: a.current,
      focus: N
    })
  );
  const C = t.useCallback(
    (P, R, d) => {
      if (i && s) {
        const S = {
          itemTarget: P,
          itemIndex: R,
          syntheticEvent: d,
          nativeEvent: d && d.nativeEvent,
          target: void 0
        };
        s.call(void 0, S);
      }
    },
    [i, s]
  ), c = T(a, l.dir), D = j(
    {
      "k-drawer-container": !0,
      "k-drawer-expanded": r,
      "k-drawer-overlay": o === "overlay",
      "k-drawer-push": o === "push",
      "k-drawer-mini": m && !r
    },
    v
  );
  return /* @__PURE__ */ t.createElement(
    W.Provider,
    {
      value: {
        animation: y,
        expanded: r,
        mode: o,
        position: f,
        mini: m,
        dir: c,
        items: i,
        item: x,
        width: b,
        miniWidth: k,
        onOverlayClick: E,
        onSelect: C
      }
    },
    /* @__PURE__ */ t.createElement("div", { className: D, ref: a, dir: c, style: h, tabIndex: g }, i && /* @__PURE__ */ t.createElement(I, null), w)
  );
});
u.propTypes = {
  animation: e.any,
  expanded: e.bool,
  children: e.any,
  className: e.string,
  dir: e.string,
  mode: e.string,
  position: e.string,
  mini: e.bool,
  style: e.object,
  tabIndex: e.number,
  width: e.number,
  miniWidth: e.number,
  selected: e.number,
  onSelect: e.func,
  onOverlayClick: e.func
};
const n = {
  animation: !0,
  expanded: !1,
  mode: "overlay",
  position: "start",
  mini: !1,
  width: 240,
  miniWidth: 48
};
u.displayName = "KendoDrawer";
export {
  u as Drawer
};
